// <auto-generated />
using System;
using BioField.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BioField.Migrations
{
    [DbContext(typeof(BioFieldContext))]
    partial class BioFieldContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("BioField.Models.ApplicationUser", b =>
                {
                    b.Property<int>("ApplicationUserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Token");

                    b.Property<string>("Username");

                    b.HasKey("ApplicationUserId");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("BioField.Models.Entries", b =>
                {
                    b.Property<int>("EntriesId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DateTimeString");

                    b.Property<int>("JournalsId");

                    b.Property<string>("Observation");

                    b.Property<string>("Site");

                    b.Property<string>("Soil");

                    b.Property<int>("Temperature");

                    b.Property<int?>("UserApplicationUserId");

                    b.Property<string>("Weather");

                    b.Property<string>("Wind");

                    b.HasKey("EntriesId");

                    b.HasIndex("JournalsId");

                    b.HasIndex("UserApplicationUserId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("BioField.Models.Journals", b =>
                {
                    b.Property<int>("JournalsId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("UserId");

                    b.HasKey("JournalsId");

                    b.HasIndex("UserId");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("BioField.Models.Entries", b =>
                {
                    b.HasOne("BioField.Models.Journals", "Journal")
                        .WithMany("Entries")
                        .HasForeignKey("JournalsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BioField.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserApplicationUserId");
                });

            modelBuilder.Entity("BioField.Models.Journals", b =>
                {
                    b.HasOne("BioField.Models.ApplicationUser", "User")
                        .WithMany("UserJournals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
